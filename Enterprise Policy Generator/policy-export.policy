{"name":".","time":"2020-01-09T11:35:00.633Z","configuration":{"arrayfields":{"FlashPlugin_Allow":["2","3","4","5"]},"checkboxes":{"DisablePrivateBrowsing":true,"DisableFormHistory":true,"DisablePocket":true,"DisableFirefoxAccounts":true,"DisableMasterPasswordCreation":true,"DisableSetDesktopBackground":true,"DisableProfileImport":true,"DisableSafeMode":true,"DisableProfileRefresh":true,"DisableFeedbackCommands":true,"Preference_ui_key_menuAccessKeyFocuses":true,"DisplayBookmarksToolbar":true,"FirefoxHome":true,"FirefoxHome_Locked":true,"NewTabPage":true,"SearchBar":true,"NoDefaultBookmarks":true,"Preference_extensions_getAddons_showPane":true,"DNSOverHTTPS":true,"NetworkPrediction":true,"Preference_network_dns_disableIPv6":true,"Preference_browser_fixup_dns_first_for_single_words":true,"SanitizeOnShutdown":true,"EnableTrackingProtection":true,"Permissions":true,"Permissions_Location_Locked":true,"Permissions_Location_BlockNewRequests":true,"Permissions_Camera_Locked":true,"Permissions_Camera_BlockNewRequests":true,"Permissions_Microphone_Locked":true,"Permissions_Microphone_BlockNewRequests":true,"Permissions_Notifications_Locked":true,"Permissions_Notifications_BlockNewRequests":true,"OfferToSaveLogins":true,"OfferToSaveLoginsDefault":true,"PasswordManagerEnabled":true,"FlashPlugin":true,"DisableAppUpdate":true,"AppUpdateURL":true,"ExtensionUpdate":true,"DisableSystemAddonUpdate":true,"Preference_browser_search_update":true,"DisableTelemetry":true,"DisableFirefoxStudies":true,"Preference_security_ssl_errorReporting_enabled":true,"Preference_media_gmp_widevinecdm_enabled":true,"Preference_media_gmp_gmpopenh264_enabled":true,"Preference_browser_tabs_warnOnClose":true,"Preference_places_history_enabled":true,"SearchSuggestEnabled":true,"Preference_browser_urlbar_suggest_history":true,"Preference_browser_urlbar_suggest_bookmark":true,"Preference_browser_urlbar_suggest_openpage":true,"Preference_dom_event_contextmenu_enabled":true,"Preference_dom_disable_window_move_resize":true,"Preference_dom_disable_window_flip":true,"Preference_datareporting_policy_dataSubmissionPolicyBypassNotification":true,"OverrideFirstRunPage":true,"OverridePostUpdatePage":true},"input":{"DNSOverHTTPS_ProviderURL":"https://ndns.233py.com/dns-query","FlashPlugin_Allow_1":"http://www.4399.com/","FlashPlugin_Allow_2":"https://v.qq.com/","FlashPlugin_Allow_3":"http://yxcq.qq.com/","FlashPlugin_Allow_4":"https://user.qzone.qq.com/","FlashPlugin_Allow_5":"https://bbs.kafan.cn/","AppUpdateURL_Text":"https://0.0.0.0"},"select":{"Preference_ui_key_menuAccessKeyFocuses_Select":"false","FirefoxHome_Search":"null","FirefoxHome_TopSites":"false","FirefoxHome_Highlights":"false","FirefoxHome_Pocket":"false","FirefoxHome_Snippets":"false","NewTabPage_Select":"false","SearchBar_Select":"unified","Preference_extensions_getAddons_showPane_Select":"false","DNSOverHTTPS_Enabled":"true","NetworkPrediction_Select":"true","Preference_network_dns_disableIPv6_Select":"true","Preference_browser_fixup_dns_first_for_single_words_Select":"false","SanitizeOnShutdown_Cache":"true","SanitizeOnShutdown_Cookies":"false","SanitizeOnShutdown_Downloads":"true","SanitizeOnShutdown_FormData":"true","SanitizeOnShutdown_History":"true","SanitizeOnShutdown_Sessions":"true","SanitizeOnShutdown_SiteSettings":"true","SanitizeOnShutdown_OfflineApps":"true","EnableTrackingProtection_Value":"true","EnableTrackingProtection_Cryptomining":"true","EnableTrackingProtection_Fingerprinting":"true","OfferToSaveLogins_Select":"false","OfferToSaveLoginsDefault_Select":"false","PasswordManagerEnabled_Select":"false","FlashPlugin_Default":"null","ExtensionUpdate_Select":"true","Preference_browser_search_update_Select":"false","Preference_security_ssl_errorReporting_enabled_Select":"false","Preference_media_gmp_widevinecdm_enabled_Select":"true","Preference_media_gmp_gmpopenh264_enabled_Select":"false","Preference_browser_tabs_warnOnClose_Select":"false","Preference_places_history_enabled_Select":"false","SearchSuggestEnabled_Select":"false","Preference_browser_urlbar_suggest_history_Select":"false","Preference_browser_urlbar_suggest_bookmark_Select":"false","Preference_browser_urlbar_suggest_openpage_Select":"false","Preference_dom_event_contextmenu_enabled_Select":"false","Preference_dom_disable_window_move_resize_Select":"true","Preference_dom_disable_window_flip_Select":"true","Preference_datareporting_policy_dataSubmissionPolicyBypassNotification_Select":"true"}}}